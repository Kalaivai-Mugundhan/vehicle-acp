// Creating an interface
interface Vehicle {
    // All are abstract methods
    void changeGear(int newGear);
    void speedUp(int increment);
    void applyBrakes(int decrement);
}

// Implementing the interface in Bicycle class
class Bicycle implements Vehicle {
    int speed;
    int gear;

    // To change gear
    @Override
    public void changeGear(int newGear) {
        gear = newGear;
    }

    // To increase speed
    @Override
    public void speedUp(int increment) {
        speed += increment;
    }

    // To decrease speed
    @Override
    public void applyBrakes(int decrement) {
        speed -= decrement;
    }

    public void printStates() {
        System.out.println("Bicycle - Speed: " + speed + " Gear: " + gear);
    }
}

// Implementing the interface in Car class
class Car implements Vehicle {
    int speed;
    int gear;

    // To change gear
    @Override
    public void changeGear(int newGear) {
        gear = newGear;
    }

    // To increase speed
    @Override
    public void speedUp(int increment) {
        speed += increment;
    }

    // To decrease speed
    @Override
    public void applyBrakes(int decrement) {
        speed -= decrement;
    }

    public void printStates() {
        System.out.println("Car - Speed: " + speed + " Gear: " + gear);
    }
}

// Main class to execute the program
public class vehicles {
    public static void main(String[] args) {
        // Creating an instance of Bicycle
        Bicycle bicycle = new Bicycle();
        bicycle.changeGear(2);
        bicycle.speedUp(3);
        bicycle.applyBrakes(1);

        System.out.println("Bicycle present state:");
        bicycle.printStates();

        // Creating an instance of Car
        Car car = new Car();
        car.changeGear(1);
        car.speedUp(4);
        car.applyBrakes(3);

        System.out.println("Car present state:");
        car.printStates();
    }
}
